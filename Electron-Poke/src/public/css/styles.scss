@import 'colors';
@import 'variables';
@import 'layout';
@import 'controls';

* {
    padding: 0;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

html {
    height: 100%;
}

body {
    color: $primaryTextColor;
    background: $secondaryColor;
    height: 100%;
    overflow-y: hidden;
}

::-webkit-scrollbar {
    width: 12px;
}

::-webkit-scrollbar-thumb {
  background-color: lighten($secondaryColor, 10%);
  outline: 1px solid lighten($secondaryColor, 5%);
}

.waiting-for-connection-watermark {
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation-list-column {
    border-right: solid 1px $primaryColor;
}

.start-new-conversation-list-item {
    color: $primaryTextColor;
    width: 50px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    vertical-align: middle;
}

// Creates a + button
.start-new-conversation-button {
    position: relative;
    font-size: 20px;
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    outline: none;

    &::after {
        content: " ";
        position: absolute;
        display: block;
        background-color: $primaryColor;
        height: 6px;
        transform: translateY(-50%);
        top: 50%;
        left: 10px;
        right: 10px;
    }

    &:hover::after {
        background-color: $primaryTextColor;
    }

    &::before {
        content: " ";
        position: absolute;
        display: block;
        background-color: $primaryColor;
        width: 6px;
        transform: translateX(-50%);
        left: 50%;
        top: 10px;
        bottom: 10px;
    }

    &:hover::before {
        background-color: $primaryTextColor;
    }
}

.conversation-list-item {
    position: relative;
    background: $primaryColor;
    color: $primaryTextColor;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    vertical-align: middle;

    &[sudo-attention=true]::after {
        content: " ";
        position: absolute;
        top: 0;
        right: 0;
        width: 15px;
        height: 15px;
        background: $primaryTextColor;
        border-radius: 50%;
    }
}

.conversation-list-button {
    font-size: 20px;
    width: 100%;
    height: 100%;
    background: transparent;
    color: $primaryTextColor;
    border: none;
    border-radius: 50%;
    outline: none;
}

.conversation-list-no-conversations-watermark {
    display: flex;
    flex: 1 1 auto;
    justify-content: center;
    align-items: center;
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation {
    display: flex;
    flex-direction: column;
}

.conversation-header {
    flex: 0 0 auto;
    background: $primaryColor;
    font-size: 24px;

    box-shadow: 0 8px 6px -6px #222;
    z-index: 1000;
}

.conversation-content {
    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;
}

.conversation-no-messages-watermark {
    display: flex;
    flex: 1 1 auto;
    justify-content: center;
    align-items: center;
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation-footer {
    flex: 0 0 auto;
    background: $secondaryColor;
    border-top: solid 1px $primaryColor;
    box-shadow: 0 -8px 6px -6px #222;
    z-index: 999;
}

.message-bubble {
    max-width: 70%;

    &-default {
        border-radius: 10px;
        background: lighten($secondaryColor, 10%);
    }

    &-time-user {
        text-align: right;
    }

    &-time-other {
        text-align: left;
    }
}

.contacts-header {
    flex: 0 0 auto;
    background: $primaryColor;
    font-size: 24px;

    box-shadow: 0 8px 6px -6px #222;
    z-index: 1000;
}

.contact-content {
    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;
}

.contact-row {
    border-bottom: solid 1px $primaryColor;
    font-size: 20px;

    &:hover {
        background: lighten($secondaryColor, 10%);
    }

    &:last-child {
        border-bottom: none;
    }
}

@mixin x-cross-left-bottom($width, $top, $bottom, $color) {
    content: " ";
    position: absolute;
    display: block;
    background-color: $color;
    width: $width;
    transform: translateX(-50%) rotateZ(45deg);
    left: 50%;
    top: $top;
    bottom: $bottom;
}

@mixin x-cross-left-top($height, $left, $right, $color) {
    content: " ";
    position: absolute;
    display: block;
    background-color: $color;
    height: $height;
    transform: translateY(-50%) rotateZ(45deg);
    top: 50%;
    left: $left;
    right: $right;
}

// Creates an X button
.close-button {
    position: relative;
    width: 32px;
    height: 32px;
    line-height: 32px;
    text-align: center;
    vertical-align: middle;
    border: none;
    outline: none;
    background: transparent;

    &::before {
        @include x-cross-left-bottom(2px, 4px, 4px, $primaryTextColor);
    }

    &:hover::before {
        background-color: darken($primaryTextColor, 25%);
    }

    &::after {
        @include x-cross-left-top(2px, 4px, 4px, $primaryTextColor);
    }

    &:hover::after {
        background-color: darken($primaryTextColor, 25%);
    }
}

.code-input-wrapper {
    font-size: 0;
}

.code-input-single-box {
    color: $secondaryTextColor;
    font-size: 42px;
    width: 54px;
    height: 64px;
    border: none;
    outline: none;
    text-align: center;

    &:last-of-type {
        padding-right: 5px;
    }
}

$crossTransitionSpeed: 0.1s;
$arrowWingsTransitionSpeed: 0.1s;

// Uses so we don't have 2 sets of this for each definition
// of an arrow wing base.
@mixin arrow-wing {
    content: " ";
    position: absolute;
    display: block;
    background-color: transparent;
    height: 6px;
    transform-origin: 92.5% 50%;
    transform: translateY(-50%);
    top: 50%;
    left: 28px;
    right: 11px;
    border-right: 3px solid transparent;
    border-radius: 0 25% 25% 0;
    // prop, duration, function, delay
    transition:
        transform $arrowWingsTransitionSpeed ease,
        background-color 0s ease $arrowWingsTransitionSpeed,
        border-color 0s ease $arrowWingsTransitionSpeed;
}

// Use this mixin to transition to this state.
// This should be used on hover, disabled etc.
@mixin arrow-wing-transformed($degrees) {
    transform: translateY(-50%) rotateZ($degrees);
    background-color: $primaryTextColor;
    border-color: $primaryTextColor;
    transition:
        transform $arrowWingsTransitionSpeed ease $crossTransitionSpeed,
        background-color 0s ease $crossTransitionSpeed,
        border-color 0s ease $crossTransitionSpeed;
}

.code-input-accept-button {
    position: relative;
    width: 64px;
    height: 64px;
    background: $primaryColor;
    border: none;
    outline: none;
    vertical-align: bottom;

    &:hover {
        background: lighten($primaryColor, 10%);
    }

    &[sudo-disabled=true] {
        background: lighten($secondaryColor, 10%);
    }

    &::before {
        @include x-cross-left-bottom(6px, 12px, 12px, $primaryTextColor);
        transition: transform $crossTransitionSpeed ease $arrowWingsTransitionSpeed;
    }

    &[sudo-disabled=false]::before {
        transform: translateX(-50%) rotateZ(90deg);
        transition: transform $crossTransitionSpeed ease;
    }

    &::after {
        @include x-cross-left-top(6px, 12px, 12px, $primaryTextColor);
        transition: transform $crossTransitionSpeed ease $arrowWingsTransitionSpeed;
    }

    &[sudo-disabled=false]::after {
        transform: translateY(-50%);
        transition: transform $crossTransitionSpeed ease;
    }

    &-arrow-wings {
        &::before {
            @include arrow-wing;
        }
        &::after {
            @include arrow-wing;
        }
    }

    &-arrow-wings[sudo-disabled=false]::before {
        @include arrow-wing-transformed(45deg);
    }

    &-arrow-wings[sudo-disabled=false]::after {
        @include arrow-wing-transformed(-45deg);
    }
}