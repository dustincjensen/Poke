@import 'colors';
@import 'variables';
@import 'layout';
@import 'controls';

* {
    padding: 0;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

html {
    height: 100%;
}

body {
    color: $primaryTextColor;
    background: $secondaryColor;
    height: 100%;
    overflow-y: hidden;
    overflow-x: hidden;
}

button {
    cursor: pointer;
}

.scroll-bar-styled {
    &::-webkit-scrollbar {
        width: 12px;
    }
    
    &::-webkit-scrollbar-thumb {
      background-color: lighten($secondaryColor, 10%);
      outline: 1px solid lighten($secondaryColor, 5%);
    }
}

.scroll-bar-hidden {
    overflow-x: hidden;
    overflow-y: hidden;

    // This hides the vertical scroll bar even when
    // we turn on overflow-y: scroll.
    &::-webkit-scrollbar {
        width: 0;
    }
    
    &:hover {
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;
    }
}

.waiting-for-connection-watermark {
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation-list-column {
    width: 60px;
    border-right: solid 1px $primaryColor;
    transition: width 0.5s ease;

    // Do no let this get pushed aside when really small.
    flex-shrink: 0;
}

.menu-slide {
    width: 300px;
}

.start-new-conversation-list-item {
    color: $primaryTextColor;
    width: 50px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    vertical-align: middle;
}

.hamburger-menu {
    border: none;
    outline: none;
    background-color: transparent;
    height: 50px;
    width: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    & div {
        width: 30px;
        height: 5px;
        background-color: $tertiaryColor;
        margin: 2.5px 0;
    }

    &:hover > div {
        background-color: $primaryTextColor;
    }

    &[sudo-selected=true] > div {
        background-color: $primaryColor;
    }

    &[sudo-selected=true]:hover > div {
        background-color: $primaryTextColor;
    }
}

.settings-gear {
    height: 50px;
    width: 50px;
    position: relative;

    & .center {
        position: absolute;
        top: 12px;
        bottom: 12px;
        left: 12px;
        right: 12px;
        border-radius: 50%;
        border: solid 6px $tertiaryColor;
        background: $secondaryColor;
    }

    &:hover .center {
        border-color: $primaryTextColor;
    }

    & .tooth {
        background: $tertiaryColor;
        position: absolute;
        top: 7px;
        bottom: 7px;
        width: 5px;
        left: 50%;
        border-radius: 5px;
        border: solid 1px $tertiaryColor;
    }

    &:hover .tooth {
        background: $primaryTextColor;
        border-color: $primaryTextColor;
    }

    .tooth:nth-child(1) {
        transform: translateX(-50%);
    }

    .tooth:nth-child(2) {
        transform: translateX(-50%) rotate(45deg);
    }

    .tooth:nth-child(3) {
        transform: translateX(-50%) rotate(90deg);
    }
    .tooth:nth-child(4) {
        transform: translateX(-50%) rotate(135deg);
    }
}

// Creates a + button
.start-new-conversation-button {
    position: relative;
    font-size: 20px;
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    outline: none;

    &::after {
        content: " ";
        position: absolute;
        display: block;
        background-color: $tertiaryColor;
        height: 6px;
        transform: translateY(-50%);
        top: 50%;
        left: 10px;
        right: 10px;
    }

    &:hover::after {
        background-color: $primaryTextColor;
    }

    &::before {
        content: " ";
        position: absolute;
        display: block;
        background-color: $tertiaryColor;
        width: 6px;
        transform: translateX(-50%);
        left: 50%;
        top: 10px;
        bottom: 10px;
    }

    &:hover::before {
        background-color: $primaryTextColor;
    }
}

.more-options {
    border: none;
    outline: none;
    background-color: transparent;
    height: 30px;
    width: 30px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    & div {
        width: 5px;
        height: 5px;
        background-color: $primaryTextColor;
        margin: 2.5px 0;
    }
}

// Requires structure of
// <div class="context-menu">
//   <ul>
//     <li></li>
//   </ul>
// </div>
.context-menu {
    position: relative;
    float: right;

    & ul {
        display: none;
        position: absolute;
        top: 110%;
        right: 5px;
        list-style: none;
        background: $primaryTextColor;
        color: $secondaryTextColor;
        font-size: 18px;
    }

    & ul li {
        width: 200px;
        padding: 10px;
    }

    & ul li:hover {
        cursor: pointer;
        color: $primaryTextColor;
        background: $tertiaryColor;
    }

    // Since the display is none...
    // when you turn it into display: block
    // it re-appears.
    &[sudo-focused=true] ul {
        display: block;
    }
}

.conversation-list-item {
    position: relative;
    background: $primaryColor;
    color: $primaryTextColor;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    vertical-align: middle;

    &[sudo-attention=true]::after {
        content: " ";
        position: absolute;
        top: 0;
        right: 0;
        width: 15px;
        height: 15px;
        background: $primaryTextColor;
        border-radius: 50%;
    }
}

.conversation-list-name {
    font-size: 20px;
    position: absolute;
    top: 0;
    left: 55px;
    padding-left: 10px;

    // because 300px minus the margin
    width: 290px - 65px;
    height: 100%;
    display: flex;
    align-items: center;
}

.relative-parent-container {
    position: relative;
}

.side-bar-selectable {
    cursor: pointer;
}

.side-bar-special-icons-group {
    flex-shrink: 0;
}

.overflow-hidden {
    overflow-x: hidden;
    overflow-y: hidden;
}

.conversation-list-button {
    font-size: 20px;
    width: 100%;
    height: 100%;
    background: transparent;
    color: $primaryTextColor;
    border: none;
    border-radius: 50%;
}

.conversation-list-no-conversations-watermark {
    display: flex;
    flex: 1 1 auto;
    justify-content: center;
    align-items: center;
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation {
    display: flex;
    flex-direction: column;
}

.conversation-header {
    flex: 0 0 auto;
    background: $primaryColor;
    font-size: 24px;

    box-shadow: 0 8px 6px -6px #222;
    z-index: 1000;
}

.conversation-content {
    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;
    overflow-x: hidden;
}

.conversation-no-messages-watermark {
    display: flex;
    flex: 1 1 auto;
    justify-content: center;
    align-items: center;
    color: $primaryTextColor;
    font-size: 24px;
}

.conversation-footer {
    flex: 0 0 auto;
    background: $secondaryColor;
    border-top: solid 1px $primaryColor;
    box-shadow: 0 -8px 6px -6px #222;
    z-index: 999;
}

.message-bubble {
    max-width: 70%;

    // https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/
    // This notes the use of word-break: break-word and by itself is all I need. The documentation
    // around this is practically non-existant and even VS Code doesn't recognize it as a valid
    // option for word-break, but it definitely works exactly how you'd expect where as
    // overflow-wrap: break-word doesn't work and word-break: break-all is far too aggressive.
    word-break: break-word;

    &-default {
        border-radius: 10px;
        background: lighten($secondaryColor, 10%);

        // Without pre-line it will not accept newline characters.
        white-space: pre-line;
    }

    &-time-user {
        text-align: right;
    }

    &-time-other {
        text-align: left;
    }
}

.contacts-header {
    flex: 0 0 auto;
    background: $primaryColor;
    font-size: 24px;

    box-shadow: 0 8px 6px -6px #222;
    z-index: 1000;
}

.contact-content {
    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;
}

.contact-row {
    font-size: 20px;

    &:hover {
        background: lighten($secondaryColor, 10%);
    }

    &:last-child {
        border-bottom: none;
    }
}

.contact-phone-number {
    font-size: 16px;
    color: darken($primaryTextColor, 25%);
}

@mixin x-cross-left-bottom($width, $top, $bottom, $color) {
    content: " ";
    position: absolute;
    display: block;
    background-color: $color;
    width: $width;
    transform: translateX(-50%) rotateZ(45deg);
    left: 50%;
    top: $top;
    bottom: $bottom;
}

@mixin x-cross-left-top($height, $left, $right, $color) {
    content: " ";
    position: absolute;
    display: block;
    background-color: $color;
    height: $height;
    transform: translateY(-50%) rotateZ(45deg);
    top: 50%;
    left: $left;
    right: $right;
}

// Creates an X button
.close-button {
    position: relative;
    width: 32px;
    height: 32px;
    line-height: 32px;
    text-align: center;
    vertical-align: middle;
    border: none;
    outline: none;
    background: transparent;

    &::before {
        @include x-cross-left-bottom(2px, 4px, 4px, $primaryTextColor);
    }

    &:hover::before {
        background-color: darken($primaryTextColor, 25%);
    }

    &::after {
        @include x-cross-left-top(2px, 4px, 4px, $primaryTextColor);
    }

    &:hover::after {
        background-color: darken($primaryTextColor, 25%);
    }
}

.code-input-wrapper {
    font-size: 0;
}

.code-input-single-box {
    color: $secondaryTextColor;
    font-size: 42px;
    width: 54px;
    height: 64px;
    border: none;
    outline: none;
    text-align: center;

    &:last-of-type {
        padding-right: 5px;
    }
}

$crossTransitionSpeed: 0.1s;
$arrowWingsTransitionSpeed: 0.1s;

// Uses so we don't have 2 sets of this for each definition
// of an arrow wing base.
@mixin arrow-wing {
    content: " ";
    position: absolute;
    display: block;
    background-color: transparent;
    height: 6px;
    transform-origin: 92.5% 50%;
    transform: translateY(-50%);
    top: 50%;
    left: 28px;
    right: 11px;
    border-right: 3px solid transparent;
    border-radius: 0 25% 25% 0;
    // prop, duration, function, delay
    transition:
        transform $arrowWingsTransitionSpeed ease,
        background-color 0s ease $arrowWingsTransitionSpeed,
        border-color 0s ease $arrowWingsTransitionSpeed;
}

// Use this mixin to transition to this state.
// This should be used on hover, disabled etc.
@mixin arrow-wing-transformed($degrees) {
    transform: translateY(-50%) rotateZ($degrees);
    background-color: $primaryTextColor;
    border-color: $primaryTextColor;
    transition:
        transform $arrowWingsTransitionSpeed ease $crossTransitionSpeed,
        background-color 0s ease $crossTransitionSpeed,
        border-color 0s ease $crossTransitionSpeed;
}

.code-input-accept-button {
    position: relative;
    width: 64px;
    height: 64px;
    background: $primaryColor;
    border: none;
    outline: none;
    vertical-align: bottom;

    &:hover {
        background: lighten($primaryColor, 10%);
    }

    &[sudo-disabled=true] {
        background: lighten($secondaryColor, 10%);
    }

    &::before {
        @include x-cross-left-bottom(6px, 12px, 12px, $primaryTextColor);
        transition: transform $crossTransitionSpeed ease $arrowWingsTransitionSpeed;
    }

    &[sudo-disabled=false]::before {
        transform: translateX(-50%) rotateZ(90deg);
        transition: transform $crossTransitionSpeed ease;
    }

    &::after {
        @include x-cross-left-top(6px, 12px, 12px, $primaryTextColor);
        transition: transform $crossTransitionSpeed ease $arrowWingsTransitionSpeed;
    }

    &[sudo-disabled=false]::after {
        transform: translateY(-50%);
        transition: transform $crossTransitionSpeed ease;
    }

    &-arrow-wings {
        &::before {
            @include arrow-wing;
        }
        &::after {
            @include arrow-wing;
        }
    }

    &-arrow-wings[sudo-disabled=false]::before {
        @include arrow-wing-transformed(45deg);
    }

    &-arrow-wings[sudo-disabled=false]::after {
        @include arrow-wing-transformed(-45deg);
    }
}


// animate.css
.animated {
    animation-duration: 2s;
    animation-fill-mode: both;

    &.infinite {
        animation-iteration-count: infinite;
    }
    
    &.animate-twice {
        animation-iteration-count: 2;
    }
}

// animate.css
@keyframes bounce {
    from, 10%, 26.5%, 40%, 50%, to {
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        transform: translate3d(0,0,0);
    }

    20%, 21.5% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -15px, 0);
    }

    35% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -7.5px, 0);
    }

    45% {
        transform: translate3d(0,-2px,0);
    }
}

// animate.css
.bounce {
    animation-name: bounce;
    transform-origin: center bottom;
}
  
.inner-settings-header {
    font-size: 24px;
    color: $primaryTextColor;
}

.settings-content {
    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;    
}

.settings-inner-content {
    max-width: 800px;
}

.version-number {
    font-size: 18px;
    font-weight: bold;
    color: $tertiaryColor;
}

.waiting-title-header {
    font-size: 72px;
    user-select: none;
    cursor: default;
}

.waiting-title-sub-header {
    font-size: 24px;
    color: $primaryColor;
    user-select: none;
    cursor: default;
}

.waiting-how-to-connect {
    color: $tertiaryColor;
    font-size: 18px;
    user-select: none;
    cursor: default;

    & > ol {
        padding-left: 20px;
    }
}

.italic {
    font-style: italic;
}

// The height of the button in the conversation
// message sending.
.send-button-height {
    height: 40px;
}


// A class that is on the controlling div frame
// for the conversation list. This class allows
// us to implement blur, grayscale and opacity
// changes to the whole div window based on our
// settings.
.conversation-list-window-div {
    &.blur {
        filter: blur(10px);
    }

    &.grayscale {
        filter: grayscale(1);
    }

    &.opacity {
        filter: opacity(0.2);
    }

    &.blur.grayscale {
        filter: blur(10px) grayscale(1);
    }

    &.blur.opacity {
        filter: blur(10px) opacity(0.2);
    }
}